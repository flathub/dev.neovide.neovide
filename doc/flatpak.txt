*flatpak*

==============================================================================
*flatpak-term* | run host terminal from flatpak neovide
>cmd
    :term host-spawn

==============================================================================
*flatpak-nvim* | tell neovide to use host nvim

by default, neovide uses sandboxed neovim, but you can tell neovide to use neovim from host, toolbox or distrobox

use host nvim >bash

   nvim=$(which nvim)
   echo "neovim-bin = 'flatpak-spawn --host $nvim'" | tee ~/.var/app/dev.neovide.neovide/config/neovide/config.toml

use nvim from toolbox >bash

    toolbox create -d=fedora nvim-fedora-toolbox
    toolbox run -c=nvim-fedora-toolbox sudo dnf install -y neovim git wl-clipboard gcc npm ripgrep fd
    echo "neovim-bin = 'flatpak-spawn --host toolbox run -c=nvim-fedora-toolbox nvim'" > ~/.var/app/dev.neovide.neovide/config/neovide/config.toml

use nvim from distrobox >bash

    distrobox create --pull --image registry.fedoraproject.org/fedora-toolbox:41 nvim-fedora-distrobox
    distrobox enter nvim-fedora-distrobox -- sudo dnf install -y neovim git wl-clipboard gcc npm ripgrep fd
    echo "neovim-bin = 'flatpak-spawn --host distrobox enter nvim-fedora-distrobox -- nvim'" > ~/.var/app/dev.neovide.neovide/config/neovide/config.toml

if you want go back to sandboxed nvim, trash your neovide config >bash

    gio trash ~/.var/app/dev.neovide.neovide/config/neovide/config.toml

==============================================================================
*flatpak-nvim-distro* | install neovim distributions

before installing any neovim distribution you should move to trash your current config >bash

    gio trash ~/.var/app/dev.neovide.neovide

install astronvim >bash

    git clone https://github.com/AstroNvim/template ~/.var/app/dev.neovide.neovide/config/nvim

install nvchad >bash

    git clone https://github.com/NvChad/starter ~/.var/app/dev.neovide.neovide/config/nvim

install gmanka's config >bash

    git clone https://github.com/gmankab/nvim_config ~/.var/app/dev.neovide.neovide/config/nvim

==============================================================================
*flatpak-sdk* | install custom SDKs

this version is running inside a flatpak container and is therefore
not able to access SDKs on your host system

this flatpak provides a standard development environment (git, gcc, python, etc)

to see what's available >bash

    flatpak run --command=bash dev.neovide.neovide
    ls /usr/bin # shared runtime
    ls /app/bin # bundled with this flatpak

to get support for additional languages, you have to install SDK extensions >bash

    flatpak install flathub org.freedesktop.Sdk.Extension.dotnet
    flatpak install flathub org.freedesktop.Sdk.Extension.golang
    flatpak install flathub org.freedesktop.Sdk.Extension.node22
    flatpak install flathub org.freedesktop.Sdk.Extension.rust-stable

to find other SDKs you can use >bash

    flatpak search <TEXT>

here is how to run neovim one time with extensions enabled >bash

    FLATPAK_ENABLE_SDK_EXT=dotnet,golang,node22,rust-stable flatpak run dev.neovide.neovide

enable them forever >bash

    sudo flatpak override --env=FLATPAK_ENABLE_SDK_EXT=dotnet,golang,node22,rust-stable dev.neovide.neovide

disable >bash

    sudo flatpak override --reset dev.neovide.neovide

==============================================================================
*flatpak-var-app* | access to ~/.var/app directory

by default flatpak sandbox restricts neovide from access to ~/.var/app
directory, to edit files in this directory you should override permissions

    sudo flatpak override dev.neovide.neovide --filesystem=~/.var/app

 vim:tw=78:ts=4:ft=help

